<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.project2nd.party.PartyMapper">

    <insert id="postParty" keyProperty="partySeq" useGeneratedKeys="true">
        INSERT INTO party_master
        SET party_name = #{partyName}
        , party_genre = #{partyGenre}
        , party_location = #{partyLocation}
        , party_min_age = #{partyMinAge}
        , party_max_age = #{partyMaxAge}
        , party_gender = #{partyGender}
        , party_maximum = #{partyMaximum}
        , party_join_gb = #{partyJoinGb}
        , party_intro = #{partyIntro}
        , party_join_form = #{partyJoinForm}
        , party_pic = #{partyPic}
        , party_auth_gb = 0
    </insert>
    <insert id="postMemberForPostParty">
        INSERT INTO party_member
        SET member_party_seq = #{partySeq}
        , member_user_seq = #{userSeq}
        , member_role = 1
        , member_gb = 1
    </insert>

    <select id="getPartyLocationAll">
        SELECT cd_sub AS csSub, cd_gb AS cdGb, cd_gb_nm AS cdGbNm
        FROM common_cd
        WHERE cd = #{cd}
    </select>
    <select id="getPartyLocation">
        SELECT cd_sub AS csSub, cd_gb AS cdGb, cd_gb_nm AS cdGbNm
        FROM common_cd
        WHERE cd = #{cd}
        AND cd_gb = #{cdGb}
    </select>

    <select id="getParty">
        SELECT
            A.party_seq AS partySeq, A.party_name AS partyName, A.party_genre AS partyGenre, A.party_location AS partyLocation,
            A.party_min_age AS partyMinAge, A.party_max_age AS partyMaxAge, A.party_gender AS partyGender, COUNT(B.member_party_seq) AS partyNowMem,
            A.party_maximum AS partyMaximum, A.party_join_gb AS partyJoinGb, A.party_intro AS partyIntro, A.party_join_form AS partyJoinForm,
            A.party_auth_gb AS partyAuthGb, A.party_pic AS partyPic
        FROM party_master A
        JOIN party_member B ON A.party_seq = B.member_party_seq
        GROUP BY
            A.party_seq, A.party_name, A.party_genre, A.party_location, A.party_min_age, A.party_max_age, A.party_gender,
            A.party_maximum, A.party_join_gb, A.party_intro, A.party_join_form, A.party_auth_gb, A.party_pic, A.input_dt
        ORDER BY A.input_dt DESC
    </select>
    <select id="getPartyDetail">
        SELECT
            A.party_seq AS partySeq, A.party_name AS partyName, A.party_genre AS partyGenre, A.party_location AS partyLocation,
            A.party_min_age AS partyMinAge, A.party_max_age AS partyMaxAge, A.party_gender AS partyGender, COUNT(B.member_party_seq) AS partyNowMem,
            A.party_maximum AS partyMaximum, A.party_join_gb AS partyJoinGb, A.party_intro AS partyIntro, A.party_join_form AS partyJoinForm,
            A.party_auth_gb AS partyAuthGb, A.party_pic AS partyPic
        FROM party_master A
        JOIN party_member B ON A.party_seq = B.member_party_seq
        WHERE party_seq = #{partySeq}
        GROUP BY
            A.party_seq, A.party_name, A.party_genre, A.party_location, A.party_min_age, A.party_max_age, A.party_gender,
            A.party_maximum, A.party_join_gb, A.party_intro, A.party_join_form, A.party_auth_gb, A.party_pic, A.input_dt
        ORDER BY A.input_dt DESC
    </select>
    <select id="getPartyMine">
        SELECT
            C.party_seq AS partySeq, A.user_name AS userName, C.party_name AS partyName, C.party_auth_gb AS partyAuthGb,
            COUNT(B.member_party_seq) AS partyNowMem, C.party_maximum AS partyMaximum, C.party_pic AS partyPic
        FROM user_master A
        JOIN party_member B ON A.user_seq = B.member_user_seq
        JOIN party_master C ON B.member_party_seq = C.party_seq
        WHERE B.member_role = 2 AND A.user_seq = #{userSeq}
        GROUP BY
            C.party_seq, A.user_name, C.party_name, C.party_auth_gb, C.party_maximum, C.party_pic
        ORDER BY C.input_dt DESC
        LIMIT #{startIdx}, #{size}
    </select>
    <select id="getPartyMineCount">
        SELECT COUNT(C.party_seq)
        FROM user_master A
        JOIN party_member B ON A.user_seq = B.member_user_seq
        JOIN party_master C ON B.member_party_seq = C.party_seq
        WHERE B.member_role = 2
        AND A.user_seq = #{userSeq}
    </select>
    <select id="getPartyLeader">
        SELECT
            C.party_seq AS partySeq, A.user_name AS userName, C.party_name AS partyName, C.party_auth_gb AS partyAuthGb,
            COUNT(B.member_party_seq) AS partyNowMem, C.party_maximum AS partyMaximum, C.party_pic AS partyPic
        FROM user_master A
        JOIN party_member B ON A.user_seq = B.member_user_seq
        JOIN party_master C ON B.member_party_seq = C.party_seq
        WHERE B.member_role = 1 AND A.user_seq = #{userSeq}
        GROUP BY
            C.party_seq, A.user_name, C.party_name, C.party_auth_gb, C.party_maximum, C.party_pic
        ORDER BY C.input_dt DESC
        LIMIT #{startIdx}, #{size}
    </select>
    <select id="getPartyLeaderCount">
        SELECT COUNT(C.party_seq)
        FROM user_master A
        JOIN party_member B ON A.user_seq = B.member_user_seq
        JOIN party_master C ON B.member_party_seq = C.party_seq
        WHERE B.member_role = 1
        AND A.user_seq = #{userSeq}
    </select>



    <update id="updateParty">
        UPDATE party_master
        SET party_name = #{partyName}
        , party_genre = #{partyGenre}
        , party_location = #{partyLocation}
        , party_min_age = #{partyMinAge}
        , party_max_age = #{partyMaxAge}
        , party_gender = #{partyGender}
        , party_maximum = #{partyMaximum}
        , party_intro = #{partyIntro}
        , party_join_form = #{partyJoinForm}
        , party_pic = #{partyPic}
        WHERE party_seq = #{partySeq}
    </update>
    <update id="updatePartyAuthGb">
        UPDATE party_master
        SET party_auth_gb = CASE
        WHEN party_auth_gb = 1 THEN 0
        ELSE 1
        END
        WHERE party_seq = #{partySeq}
    </update>
    <select id="getPartyAuthGb">
        SELECT party_auth_gb
        FROM party_master
        WHERE party_seq = #{partySeq}
    </select>

    <update id="updatePartyForGb2">
        UPDATE party_master
        SET party_auth_gb = 3
        WHERE party_seq = #{partySeq}
    </update>

<!--    <select id="getPartyMemberRole">-->
<!--        SELECT COALESCE(B.member_role, 0) AS memberRole-->
<!--        FROM user_master A-->
<!--        LEFT JOIN party_member B ON A.user_seq = B.member_user_seq AND B.member_party_seq = #{partySeq}-->
<!--        LEFT JOIN party_master C ON B.member_party_seq = C.party_seq-->
<!--        WHERE A.user_seq = #{userSeq}-->
<!--    </select>-->
    <delete id ="deletePartyMember">
        DELETE FROM party_member
        WHERE member_party_seq = #{partySeq}
    </delete>
    <delete id ="deleteParty">
        DELETE FROM party_master
        WHERE party_seq = #{partySeq}
    </delete>



</mapper>